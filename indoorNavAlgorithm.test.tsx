import { checkNeighbors } from './IndoorNavAlgorithm';

test('neighbors should find neighbors', () => {
    let map = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 909, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 2, 0, 0,
        0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 6, 303, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 303, 0, 0,
        0, 0, 302, 0, 0, 1206, 1205, 1210, 0, 0, 302, 0, 0, 0, 0, 0, 0, 1206, 1205, 1214, 0, 0, 0, 0, 0, 0, 0, 302, 6, 303, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 303, 0, 0,
        0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 6, 303, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 303, 0, 0,
        0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 304, 6, 303, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 303, 0, 0,
        0, 0, 302, 608, 909, 608, 608, 608, 608, 608, 909, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 6, 303, 0, 0, 0, 1206, 1206, 1214, 0, 0, 0, 0, 303, 0, 0,
        0, 0, 302, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 305, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 303, 0, 0,
        0, 0, 302, 608, 608, 909, 608, 6, 909, 610, 6, 608, 608, 909, 608, 608, 608, 608, 608, 608, 909, 608, 608, 608, 608, 608, 608, 608, 6, 303, 0, 0, 0, 0, 0, 0, 0, 0, 302, 608, 303, 0, 0,
        0, 0, 302, 0, 0, 0, 302, 6, 307, 911, 6, 303, 0, 0, 0, 303, 0, 0, 0, 0, 0, 303, 0, 0, 0, 0, 0, 302, 6, 303, 0, 0, 0, 0, 0, 0, 0, 0, 302, 306, 303, 0, 0,
        0, 0, 302, 0, 0, 0, 302, 6, 306, 608, 6, 303, 0, 0, 0, 303, 0, 1206, 1206, 1207, 0, 303, 0, 1206, 1206, 1213, 0, 302, 6, 303, 0, 0, 0, 0, 0, 0, 0, 0, 302, 307, 303, 0, 0,
        0, 0, 302, 0, 0, 0, 302, 6, 307, 608, 6, 303, 0, 0, 0, 303, 0, 0, 0, 0, 0, 303, 0, 0, 0, 0, 0, 304, 6, 303, 0, 0, 0, 0, 0, 0, 0, 0, 302, 306, 303, 0, 0,
        0, 0, 302, 608, 608, 608, 608, 6, 608, 608, 6, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 6, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 909, 303, 0, 0,
        0, 0, 304, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 305, 0, 0,
        0, 0, 304, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 305, 0, 0,
        0, 0, 302, 608, 608, 608, 608, 608, 608, 608, 608, 909, 909, 909, 608, 608, 909, 909, 608, 608, 608, 608, 608, 608, 909, 909, 608, 909, 909, 608, 909, 909, 608, 608, 608, 608, 608, 608, 608, 608, 303, 0, 0,
        0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 303, 0, 0,
        0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 303, 0, 0,
        0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 303, 0, 0,
        0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 303, 0, 0,
        0, 0, 302, 0, 0, 0, 0, 1206, 1205, 1205, 0, 0, 0, 0, 302, 0, 0, 0, 0, 1206, 1205, 1207, 0, 0, 0, 0, 302, 0, 0, 0, 0, 309, 1206, 1209, 1209, 0, 0, 0, 0, 0, 303, 0, 0,
        0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 303, 0, 0,
        0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 303, 0, 0,
        0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 303, 0, 0,
        0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 303, 0, 0,
        0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 303, 0, 0,
        0, 0, 302, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 303, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

        // codebelow doesn't worK
    // const set = checkNeighbors(340, map, 17, 42)
    // const realSet = new Set ([382])
    // expect(set).toEqual(realSet)

    // new trials:
    const set = checkNeighbors(348, map, 30, 42)
    const realSet = new Set ([391])
    console.log(map[252])
    expect(set).toEqual(realSet)
    // console.log(map[348])


});
