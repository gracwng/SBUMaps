import { checkNeighbors, makeAdjLst } from './IndoorNavAlgorithm';

// test('neighbors should find neighbors', () => {
//     let map = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//         0, 1, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 2, 0, 0,
//         0, 302, 308, 308, 308, 308, 308, 308, 308, 302, 308, 308, 308, 308, 308, 308, 308, 302, 308, 308, 308, 303, 308, 308, 308, 308, 308, 308, 302, 308, 308, 308, 308, 303, 308, 308, 308, 308, 308, 308, 303, 0, 0,
//         0, 302, 0, 0, 1207, 1205, 1206, 0, 0, 302, 0, 0, 1207, 1205, 1210, 0, 0, 302, 0, 0, 0, 303, 0, 1207, 1206, 1206, 0, 0, 302, 0, 0, 0, 0, 303, 0, 1207, 1206, 1212, 0, 0, 303, 0, 0,
//         0, 302, 0, 0, 308, 308, 308, 0, 0, 302, 0, 0, 308, 308, 308, 308, 0, 302, 0, 0, 0, 303, 0, 308, 308, 308, 0, 0, 302, 0, 0, 0, 0, 303, 0, 308, 308, 308, 0, 0, 303, 0, 0,
//         0, 302, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 303, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 303, 0, 0, 0, 0, 0, 0, 303, 0, 0,
//         0, 302, 608, 909, 608, 608, 608, 608, 608, 608, 909, 608, 608, 608, 608, 608, 909, 608, 909, 608, 608, 608, 909, 608, 608, 608, 608, 909, 608, 0, 0, 0, 0, 608, 909, 608, 608, 608, 909, 608, 303, 0, 0,
//         0, 304, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 305, 0, 0,
//         0, 302, 608, 608, 608, 909, 303, 302, 909, 303, 302, 610, 303, 302, 909, 608, 608, 608, 608, 303, 302, 909, 608, 608, 608, 608, 608, 909, 608, 608, 608, 608, 608, 909, 608, 608, 608, 608, 608, 909, 303, 0, 0,
//         0, 302, 0, 0, 0, 0, 303, 302, 306, 303, 302, 911, 303, 302, 0, 0, 0, 0, 0, 303, 302, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 302, 306, 303, 0, 0,
//         0, 302, 0, 0, 0, 0, 303, 302, 307, 303, 302, 608, 303, 302, 0, 1207, 1206, 1211, 0, 303, 302, 0, 1207, 1207, 1207, 0, 302, 0, 1207, 1207, 1209, 0, 302, 0, 1207, 1207, 1211, 0, 302, 307, 303, 0, 0,
//         0, 302, 0, 0, 0, 0, 303, 302, 306, 303, 0, 0, 0, 302, 0, 0, 0, 0, 0, 303, 302, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 302, 306, 303, 0, 0,
//         0, 302, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 303, 0, 0,
//         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
//         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

//     // new trials:
//     const set = checkNeighbors(348, map, 30, 42)
//     const realSet = new Set ([391])
//     console.log(map[252])
//     expect(set).toEqual(realSet)
//     // console.log(map[348])


// });

test('adjlst creates new list', () => {
    let map = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 2, 0, 0,
        0, 302, 308, 308, 308, 308, 308, 308, 308, 302, 308, 308, 308, 308, 308, 308, 308, 302, 308, 308, 308, 303, 308, 308, 308, 308, 308, 308, 302, 308, 308, 308, 308, 303, 308, 308, 308, 308, 308, 308, 303, 0, 0,
        0, 302, 0, 0, 1207, 1205, 1206, 0, 0, 302, 0, 0, 1207, 1205, 1210, 0, 0, 302, 0, 0, 0, 303, 0, 1207, 1206, 1206, 0, 0, 302, 0, 0, 0, 0, 303, 0, 1207, 1206, 1212, 0, 0, 303, 0, 0,
        0, 302, 0, 0, 308, 308, 308, 0, 0, 302, 0, 0, 308, 308, 308, 308, 0, 302, 0, 0, 0, 303, 0, 308, 308, 308, 0, 0, 302, 0, 0, 0, 0, 303, 0, 308, 308, 308, 0, 0, 303, 0, 0,
        0, 302, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 303, 0, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 303, 0, 0, 0, 0, 0, 0, 303, 0, 0,
        0, 302, 608, 909, 608, 608, 608, 608, 608, 608, 909, 608, 608, 608, 608, 608, 909, 608, 909, 608, 608, 608, 909, 608, 608, 608, 608, 909, 608, 0, 0, 0, 0, 608, 909, 608, 608, 608, 909, 608, 303, 0, 0,
        0, 304, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 305, 0, 0,
        0, 302, 608, 608, 608, 909, 303, 302, 909, 303, 302, 610, 303, 302, 909, 608, 608, 608, 608, 303, 302, 909, 608, 608, 608, 608, 608, 909, 608, 608, 608, 608, 608, 909, 608, 608, 608, 608, 608, 909, 303, 0, 0,
        0, 302, 0, 0, 0, 0, 303, 302, 306, 303, 302, 911, 303, 302, 0, 0, 0, 0, 0, 303, 302, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 302, 306, 303, 0, 0,
        0, 302, 0, 0, 0, 0, 303, 302, 307, 303, 302, 608, 303, 302, 0, 1207, 1206, 1211, 0, 303, 302, 0, 1207, 1207, 1207, 0, 302, 0, 1207, 1207, 1209, 0, 302, 0, 1207, 1207, 1211, 0, 302, 307, 303, 0, 0,
        0, 302, 0, 0, 0, 0, 303, 302, 306, 303, 0, 0, 0, 302, 0, 0, 0, 0, 0, 303, 302, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 302, 0, 0, 0, 0, 0, 302, 306, 303, 0, 0,
        0, 302, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 303, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

        const result = makeAdjLst(map, 17, 42)

        console.log(result.adjLst)
        console.log(result.hallwayTileIndices)
        
})
